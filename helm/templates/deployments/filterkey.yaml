{{- $src_topic := (include "kse.tplvalues.render" ( dict "value" .Values.kafka.srcTopic "context" $) ) }}
{{- $sink_topic := (include "kse.tplvalues.render" ( dict "value" .Values.kafka.sinkTopic "context" $) ) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kse.fullname" . }}-filterkey
  labels:
    {{- include "kse.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.filterkey.replicas }}
  selector:
    matchLabels:
      {{- include "kse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.filterkey.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kse.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: wait-kafka
        image: bitnami/kafka:latest
        imagePullPolicy: IfNotPresent
        command: 
        - bash 
        - -c 
        - |
          # wait for kafka broker and source topic to be ready
          sleep 10
          while true; do
            EXISTING_TOPICS=$(kafka-topics.sh --bootstrap-server {{ .Release.Name }}-kafka-headless:9092 --list 2> /dev/null)
            if [ $? -ne 0 ]; then
              echo "Kafka broker not ready. retrying..."
              sleep 5
            # check source topic exists
            elif echo $EXISTING_TOPICS | grep -w "{{ $src_topic }}" > /dev/null; then
              echo "Source topic '{{ $src_topic }}' exists."
              break
            else
              echo "Source topic '{{ $src_topic }}' does not exist. waiting..."
              sleep 5
            fi
          done

          # Create sink topic if not exists
          while true; do
            EXISTING_TOPICS=$(kafka-topics.sh --bootstrap-server {{ .Release.Name }}-kafka-headless:9092 --list 2> /dev/null)
            # check if sink topic already exists
            if echo $EXISTING_TOPICS | grep -w "{{ $sink_topic }}" > /dev/null; then
              echo "Sink topic '{{ $sink_topic }}' already exists."
              exit 0
            else
              echo "Sink topic '{{ $sink_topic }}' does not exist. creating..."
            fi

            # create topic
            kafka-topics.sh --bootstrap-server {{ .Release.Name }}-kafka-headless:9092 --create --topic {{ $sink_topic }} 2> /dev/null
            if [ $? -eq 0 ]; then
              echo "Sink topic '{{ $sink_topic }}' creation successful."
              exit 0
            else
              echo "Sink topic creation failed, retrying..."
              sleep 5             
            fi            
          done
      containers:
        - name: {{ .Chart.Name }}-filterkey
          image: '{{ include "kse.image" .Values.filterkey.image }}'
          imagePullPolicy: IfNotPresent
          env:
          - name: KAFKA_BROKER
            value: {{ .Release.Name }}-kafka-headless:9092
          - name: KAFKA_SOURCE_TOPIC
            value: {{ include "kse.tplvalues.render" ( dict "value" .Values.kafka.srcTopic "context" $) }}
          - name: KAFKA_SINK_TOPIC
            value: {{ include "kse.tplvalues.render" ( dict "value" .Values.kafka.sinkTopic "context" $) }}
          resources:
            {{- toYaml .Values.filterkey.resources | nindent 12 }}
      {{- with .Values.filterkey.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.filterkey.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.filterkey.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
